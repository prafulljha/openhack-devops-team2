variables:
- name: BuildParameters.RestoreBuildProjects
  value: apis/poi/web/poi.csproj
- name: BuildParameters.TestProjects
  value: apis/poi/tests/UnitTests/UnitTests.csproj
pr:
  branches:
    include:
    - master
  paths:
    include:
    - apis/poi
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - apis/poi
pool:
  vmImage: ubuntu-20.04
name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: master
jobs:
- job: Job_1
  displayName: Build and Test Container
  steps:
  - checkout: self
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: $(BuildParameters.RestoreBuildProjects)
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: $(BuildParameters.RestoreBuildProjects)
      arguments: --configuration $(BuildConfiguration)
  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: $(BuildParameters.TestProjects)
      arguments: --configuration $(BuildConfiguration)
  - task: Docker@2
    displayName: Build an image
    inputs:
      repository: devopsoh/api-poi
      containerRegistry: 'AZCR connection1'
      tags: '$(Build.BuildId)'
      command: 'buildAndPush'
      Dockerfile: apis/poi/web/Dockerfile
- job: Job_2
  displayName: Deploy
  dependsOn: [Job_1]
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  steps:
  - checkout: self      
  - task: AzureWebAppContainer@1
    displayName: Azure App Service Deploy POI
    inputs:
      azureSubscription: 'openhack_realTeam2'
      appName: 'openhacku787but6poi'
      deployToSlotOrASE: true
      resourceGroupName: 'openhacku787but6rg'
      slotName: 'staging'
      containers: "openhacku787but6acr.azurecr.io/devopsoh/api-poi:$(Build.BuildId)"
  - bash: |
      chmod +x apis/poi/poi_health_check.sh 
      apis/poi/poi_health_check.sh
    displayName: 'Health Check - Staging'
    failOnStderr: true
    env:
      ENDPOINT: 'https://openhacku787but6poi-staging.azurewebsites.net/api/healthcheck/poi_fail'
  - task: AzureAppServiceManage@0
    condition: succeeded()
    displayName: Manage Azure App Service-Swapping
    inputs:
      azureSubscription: 'openhack_realTeam2'
      Action: 'Swap Slots'
      WebAppName: 'openhacku787but6poi'
      ResourceGroupName: 'openhacku787but6rg'
      SourceSlot: 'staging'
  - bash: |
      chmod +x apis/poi/poi_health_check.sh 
      apis/poi/poi_health_check.sh
    displayName: 'Health Check - Production'
    failOnStderr: true
    env:
      ENDPOINT: 'https://openhacku787but6poi.azurewebsites.net/api/healthcheck/poi'
  - task: AzureAppServiceManage@0
    condition: failed()
    displayName: Manage Azure App Service - Rollback
    inputs:
      azureSubscription: 'openhack_realTeam2'
      Action: 'Swap Slots'
      WebAppName: 'openhacku787but6poi'
      ResourceGroupName: 'openhacku787but6rg'
      SourceSlot: 'staging'
  - bash: |
      chmod +x apis/poi/poi_health_check.sh 
      apis/poi/poi_health_check.sh
    condition: succeeded() 
    displayName: 'Verify Rollback'
    failOnStderr: true
    env:
      ENDPOINT: 'https://openhacku787but6poi.azurewebsites.net/api/healthcheck/poi'
- job: createworkitem
  displayName: Create work item on failure
  dependsOn: Job_1
  condition: failed() # this job will only run if Job_1 fails
  steps:
    - task: CreateWorkItem@1
      displayName: Create work item on failure
      inputs:
        workItemType: 'Issue'
        title: 'Build $(Build.BuildId) failed'
...
